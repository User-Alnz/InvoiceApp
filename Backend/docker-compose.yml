services:

# PostgreSQL database container - user Domain
  company-db:
    image: postgres:15
    container_name: company-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: company_db
    volumes:
      - company-db-data:/var/lib/postgresql/data #store data on host to persist
      - ./init-scripts/company-db:/docker-entrypoint-initdb.d # import database schema
    ports:
      - "5433:5432"
    networks:
      - invoice-net
    restart: unless-stopped

# PostgreSQL database container - auth Domain
  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: auth_db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./init-scripts/auth-db:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    networks:
      - invoice-net
    restart: unless-stopped
  
# Spring Boot user-service container - user Service
  company-service:
    build:
      context: ./company
      dockerfile: Dockerfile
    container_name: company-service
    ports:
      - "8081:8090" 
    depends_on:
      - company-db  
    networks:
      - invoice-net
    restart: unless-stopped
    environment: #override service yml config for prod env variable
     SPRING_DATASOURCE_URL: jdbc:postgresql://company-db:5432/company_db
     SPRING_DATASOURCE_USERNAME: user
     SPRING_DATASOURCE_PASSWORD: userpass
     
# Spring Boot user-service container - auth Service
  auth-service:
    build: 
      context: ./Auth
      dockerfile: Dockerfile
    container_name: auth-service
    ports: 
      - "8082:8091"
    depends_on:
      - auth-db
    networks:
      - invoice-net
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: userpass
  

networks:
  invoice-net:
    driver: bridge
# Named volume for PostgreSQL persistence
volumes:
  company-db-data:
  auth-db-data: